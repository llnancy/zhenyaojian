name: CI-CD

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Package JAR And Build Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8
          cache: 'maven'

      - name: Cache Maven Dependency
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Get project meta info
        id: project_meta
        run: |
          echo ::set-output name=version::$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)
          echo ::set-output name=description::$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.description -q -DforceStdout)

      - name: Set Docker image metadata
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: llnancy/zhenyaojian
          flavor: latest=true
          tags: ${{ steps.project_meta.outputs.version }}
          labels: |
            maintainer=admin@lilu.org.cn
            org.opencontainers.image.title=zhenyaojian
            org.opencontainers.image.version=${{ steps.project_meta.outputs.version }}

      - name: Login in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
